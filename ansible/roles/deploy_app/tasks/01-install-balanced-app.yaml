---

- name: Crear directorio para desplegar la apicacion
  file:
    path: ./deployment
    state: directory
    mode: 0755

- name: Copiar todos los archivos para desplegar
  copy:
    src: influxdb-app.yaml
    dest: "./deployment/"    
    mode: 0755

- name: Configurar ip del nodo nfs
  replace:
    path: ./deployment/influxdb-app.yaml
    regexp: '<nfsiphere>'
    replace: "{{ hostvars[groups['nfs'][0]].private_ip }}"

- name: Configurar path del nodo nfs
  replace:
    path: ./deployment/influxdb-app.yaml
    regexp: '<nfspathhere>'
    replace: "{{ nfs_path_app }}"

- name: Configurarar el DNS del ingress controller
  replace:
    path: ./deployment/influxdb-app.yaml
    regexp: '<dnshere>'
    replace: "{{ hostvars[groups['nfs'][0]].ansible_host }}"

- name: Desplegar firchero yaml de la app
  shell: kubectl apply -f ./deployment/influxdb-app.yaml

- name: Obtener el puerto de Haproxy
  command: kubectl get svc -n haproxy-controller haproxy-ingress 
  register: haproxy_port

- name: Esperar hasta que todos los pods esten listos
  shell: kubectl get pods -A -o json
  retries: 20
  delay: 15
  register: get_pods
  until: get_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]

- name: URL Generada para acceder al la app balanceada
  debug:
    msg:
      - "http://{{ hostvars[groups['nfs'][0]].ansible_host }}:{{ haproxy_port.stdout | regex_search('(?<=80:).*(?=/TCP,443)') }}"